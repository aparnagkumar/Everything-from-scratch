{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "ELC Project for priceline.ipynb",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/aparnagkumar/Python/blob/master/ELC_Project.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DH7kbgIF6y6o",
        "colab_type": "text"
      },
      "source": [
        "**`ELC PROJECT FOR PRICELINE**\n",
        "`"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tbFmb0JsPy5x",
        "colab_type": "text"
      },
      "source": [
        "The link below is an article about the model which can be used in our problem statement "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cmVgz2BjD5IQ",
        "colab_type": "text"
      },
      "source": [
        "\n",
        "\n",
        "https://towardsdatascience.com/predicting-customer-lifetime-value-with-buy-til-you-die-probabilistic-models-in-python-f5cac78758d9\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tI5-z9rZBYgL",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#  https://drive.google.com/open?id=19PsE0Gekq7gHTIXYqpSOg9T4vBi1fVx/T\n",
        "url=\"https://drive.google.com/uc?export=download&id=19PsE0Gekq7gHTIXYqpSOg9T4vBi1fVxT\"\n",
        "import pandas as pd\n",
        "priceline=pd.read_csv(url, encoding = \"ISO-8859-1\", dtype='unicode')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FsvnuvXyRXmA",
        "colab_type": "code",
        "outputId": "2a430ab7-b1ea-44c4-9659-b73c52cc340b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        }
      },
      "source": [
        "priceline.shape"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(102048, 79)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8qJBfAkWnG6s",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "PL=priceline.copy()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tuv-ALnVRSte",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#Dropping unwanted variables which are too granular\n",
        "PL.drop(['TRANS_DAY_KEY', 'HOTEL_ID','SUBMIT_DAY_KEY', 'SUBMIT_HOUR','HOTEL_CHECK_OUT_DATE','HOTEL_ZIP','PROMO_EXPIRATION_DATE','CDW_INSUR_FLAG','PROMO_START_DATE'], axis=1, inplace=True)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5QSE_BCdnRt-",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "PL_training=PL.copy() "
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xf3zWmWMLDe_",
        "colab_type": "text"
      },
      "source": [
        "# **Aggregation of dataset**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mcTOStpHnZjF",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        " \"\"\"\n",
        "    Copied the dataset and deleting all records beyond 09/09/2017 from this copy.\n",
        "    Our original dataset contains data till 09/09/2019.\n",
        "    A customer will be considered as a new customer if he doesnt return within 2 years. Hence for the target variable, we will calculate his most recent visit till 09/09/2017(recent_visit). \n",
        "    We will check if the customer has returned from his recent_visit within 2 years. This yes or no Value will be stored in a boolean variable 'Retained'\n",
        "  \"\"\"\n",
        "PL_training['ACTUAL_DATE']=pd.to_datetime(PL_training['ACTUAL_DATE'])\n",
        "PL_training= PL_training[PL_training['ACTUAL_DATE'] <= '9/9/2017']\n",
        "#Another dataset which has next visit after recent_visit( To make calculation of target variable easy)\n",
        "PL_training2=PL.copy()\n",
        "PL_training2['ACTUAL_DATE']=pd.to_datetime(PL_training2['ACTUAL_DATE'])\n",
        "PL_training2= PL_training2[PL_training2['ACTUAL_DATE'] > '9/9/2017']"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CqlWY4iPneYW",
        "colab_type": "code",
        "outputId": "3aa69653-5483-4040-d97b-8528ecaa2248",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 144
        }
      },
      "source": [
        "#Creating dummies for Product description(Hotel, Air and Rental)\n",
        "dummy=pd.get_dummies(PL_training['PRODUCT_DESC'])\n",
        "PL_training=pd.concat([PL_training, dummy],axis=1)\n",
        "PL_training.head(2)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SUBMIT_MINUTE</th>\n",
              "      <th>SUBMIT_SECOND</th>\n",
              "      <th>OFFER_NUM</th>\n",
              "      <th>ACTUAL_DATE</th>\n",
              "      <th>INITIAL_EMAIL_KEY</th>\n",
              "      <th>SITE_SERVER_COOKIE</th>\n",
              "      <th>PRODUCT_DESC</th>\n",
              "      <th>CUST_PRODUCT_GROUP_DESC</th>\n",
              "      <th>CUST_PROGRAM_DESC</th>\n",
              "      <th>PCLN_CHANNEL_SEARCH</th>\n",
              "      <th>CHANNEL_SOURCE</th>\n",
              "      <th>DEVICE_TYPE</th>\n",
              "      <th>INTERFACE_DESC</th>\n",
              "      <th>NEW_GBL_ALL_FLAG</th>\n",
              "      <th>DEST_CITY_NAME</th>\n",
              "      <th>DEST_PROVINCE_CODE</th>\n",
              "      <th>DEST_ISO_COUNTRY_CODE</th>\n",
              "      <th>CUSTOMER_CITY_NAME</th>\n",
              "      <th>CUSTOMER_ISO_COUNTRY_CODE</th>\n",
              "      <th>CUSTOMER_PROVINCE_CODE</th>\n",
              "      <th>HOH_MARITAL_STATUS_CODE</th>\n",
              "      <th>HOH_YOB_START_DATE</th>\n",
              "      <th>IND_YOB_START_DATE</th>\n",
              "      <th>IND_APPROXIMATE_AGE</th>\n",
              "      <th>HH_NO_OF_ADULTS_DESC</th>\n",
              "      <th>HH_EST_INCOME</th>\n",
              "      <th>IND_GENDER_CODE</th>\n",
              "      <th>HH_EST_NET_WORTH_DESC</th>\n",
              "      <th>EDUCATION_LEVEL_DESC</th>\n",
              "      <th>VACATION_TRAVEL_INTL_FLAG</th>\n",
              "      <th>GREEN_LIVING_FLAG</th>\n",
              "      <th>PET_OWNER_FLAG</th>\n",
              "      <th>TI_FLAG</th>\n",
              "      <th>GR_ORDERS</th>\n",
              "      <th>NET_ORDERS</th>\n",
              "      <th>GR_BOOK_AMT</th>\n",
              "      <th>AIR_NUM_TICKETS</th>\n",
              "      <th>AIR_STAY_LENGTH</th>\n",
              "      <th>AIR_ADV_PURCHASE_DAYS</th>\n",
              "      <th>AIR_DOM_INTERNATIONAL_FLAG</th>\n",
              "      <th>AIR_ROUND_TRIP_FLAG</th>\n",
              "      <th>AIR_DEPARTURE_DATE</th>\n",
              "      <th>AIR_RETURN_DATE</th>\n",
              "      <th>AIR_CABIN_CLASS</th>\n",
              "      <th>AIR_CARRIER_CODE</th>\n",
              "      <th>AIR_CARRIER_NAME</th>\n",
              "      <th>RC_PICKUP_DATE</th>\n",
              "      <th>RC_DROPOFF_DATE</th>\n",
              "      <th>RC_AP</th>\n",
              "      <th>RC_NUM_RENTAL_DAYS</th>\n",
              "      <th>RC_CAR_CLASS</th>\n",
              "      <th>RC_SUPPLIER</th>\n",
              "      <th>RC_STATUS_CODE</th>\n",
              "      <th>RC_REASON_CODE</th>\n",
              "      <th>HOTEL_CITY_NAME</th>\n",
              "      <th>HOTEL_STATE_CODE</th>\n",
              "      <th>HOTEL_COUNTRY_CODE</th>\n",
              "      <th>PRICELINE_STAR_RATING</th>\n",
              "      <th>HOTEL_AP</th>\n",
              "      <th>HOTEL_CHECK_IN_DATE</th>\n",
              "      <th>HOTEL_LOS</th>\n",
              "      <th>HOTEL_NUM_RES_ROOMS</th>\n",
              "      <th>HOTEL_GDS_NAME</th>\n",
              "      <th>PROMO_CODE</th>\n",
              "      <th>PROMO_UNIT_AMT</th>\n",
              "      <th>PROMO_CAP_AMT</th>\n",
              "      <th>PROMO_AMT_CODE</th>\n",
              "      <th>SINGLE_USE_FLAG</th>\n",
              "      <th>PROMO_AMT</th>\n",
              "      <th>PROMO_ID</th>\n",
              "      <th>AIR</th>\n",
              "      <th>HOTEL</th>\n",
              "      <th>RENTAL CAR</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7</td>\n",
              "      <td>14</td>\n",
              "      <td>18584824003</td>\n",
              "      <td>2013-01-01</td>\n",
              "      <td>69936655</td>\n",
              "      <td>1563edcd0000013bf7a49ddfaf1a009d</td>\n",
              "      <td>AIR</td>\n",
              "      <td>AIR  RETAIL AGENCY</td>\n",
              "      <td>STANDARD_PRODUCT</td>\n",
              "      <td>Direct</td>\n",
              "      <td>NaN</td>\n",
              "      <td>TABLET</td>\n",
              "      <td>DESKTOP</td>\n",
              "      <td>Y</td>\n",
              "      <td>KAHULUI</td>\n",
              "      <td>HI</td>\n",
              "      <td>US</td>\n",
              "      <td>MINNETRISTA</td>\n",
              "      <td>US</td>\n",
              "      <td>MN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Y</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3870.8</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>75</td>\n",
              "      <td>D</td>\n",
              "      <td>Y</td>\n",
              "      <td>3/17/2013</td>\n",
              "      <td>3/24/2013</td>\n",
              "      <td>ECO</td>\n",
              "      <td>AS</td>\n",
              "      <td>Alaska Airlines</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>14</td>\n",
              "      <td>3</td>\n",
              "      <td>18585080003</td>\n",
              "      <td>2013-01-01</td>\n",
              "      <td>69930171</td>\n",
              "      <td>c1609c4a000001347d23e0e0a2f700ac</td>\n",
              "      <td>AIR</td>\n",
              "      <td>AIR  RETAIL AGENCY</td>\n",
              "      <td>STANDARD_PRODUCT</td>\n",
              "      <td>Direct</td>\n",
              "      <td>NaN</td>\n",
              "      <td>TABLET</td>\n",
              "      <td>DESKTOP</td>\n",
              "      <td>Y</td>\n",
              "      <td>MIAMI</td>\n",
              "      <td>FL</td>\n",
              "      <td>US</td>\n",
              "      <td>BROOKLYN</td>\n",
              "      <td>US</td>\n",
              "      <td>NY</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>N</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>251.8</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>20</td>\n",
              "      <td>D</td>\n",
              "      <td>Y</td>\n",
              "      <td>1/21/2013</td>\n",
              "      <td>1/23/2013</td>\n",
              "      <td>ECO</td>\n",
              "      <td>AA</td>\n",
              "      <td>American Airlines</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  SUBMIT_MINUTE SUBMIT_SECOND    OFFER_NUM  ... AIR HOTEL RENTAL CAR\n",
              "0             7            14  18584824003  ...   1     0          0\n",
              "1            14             3  18585080003  ...   1     0          0\n",
              "\n",
              "[2 rows x 73 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lApfa1qzni0s",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#creating dummies for Customer Product group description (Opaque or Transparent)\n",
        "dummy2=pd.get_dummies(PL_training['CUST_PRODUCT_GROUP_DESC'])\n",
        "PL_training=pd.concat([PL_training, dummy2],axis=1)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DyObDQttnl0b",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "PL_training = PL_training.rename(columns={'RENTAL CAR': 'RENTAL','AIR  OPAQUE MERCHANT':'AIR_OPAQUE', 'AIR  RETAIL AGENCY':'AIR_RA',\n",
        "       'AIR  RETAIL MERCHANT':'AIR_RM', 'AIR SEMI OPAQUE MERCHANT':'AIR_SEMI',\n",
        "       'HOTEL  OPAQUE MERCHANT':'HOTEL_OPAQUE', 'HOTEL  RETAIL AGENCY':'HOTEL_RA',\n",
        "       'HOTEL  RETAIL MERCHANT':'HOTEL_RM', 'HOTEL SEMI OPAQUE MERCHANT':'HOTEL_SEMI',\n",
        "       'RENTAL CAR  BID MERCHANT':'RC_BID', 'RENTAL CAR  BUY IT NOW MERCHANT':'RC_BUTITNOW',\n",
        "       'RENTAL CAR  RETAIL AGENCY':'RC_RA'})"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jxHUX7z5nrUe",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "\"\"\"Creating different datasets which captures each characterstics of transaction\"\"\"\n",
        "# aggregating based on User ID\n",
        "df = pd.DataFrame(PL_training['INITIAL_EMAIL_KEY'].unique())\n",
        "df.columns = ['INITIAL_EMAIL_KEY']\n",
        "#dataset for most recent vist till 09/09/2017\n",
        "recent_vist = PL_training.groupby('INITIAL_EMAIL_KEY').ACTUAL_DATE.max().reset_index()\n",
        "recent_vist.columns = ['INITIAL_EMAIL_KEY','recentvisit']\n",
        "#dataset for first visit\n",
        "first_visit=PL_training.groupby('INITIAL_EMAIL_KEY').ACTUAL_DATE.min().reset_index()\n",
        "first_visit.columns=['INITIAL_EMAIL_KEY','first_visit']\n",
        "#Total order of each customer\n",
        "PL_training['GR_ORDERS']=PL_training['GR_ORDERS'].astype(int)\n",
        "TotalOrders=PL_training.groupby('INITIAL_EMAIL_KEY')['GR_ORDERS'].sum().reset_index()\n",
        "TotalOrders.columns=['INITIAL_EMAIL_KEY','TotalOrders']\n",
        "#Average transactional amount of each customer\n",
        "PL_training['GR_BOOK_AMT']=PL_training['GR_BOOK_AMT'].astype(float)\n",
        "transaction= PL_training.groupby('INITIAL_EMAIL_KEY').GR_BOOK_AMT.mean().reset_index()\n",
        "transaction.columns= ['INITIAL_EMAIL_KEY','Average transaction from all the visits']\n",
        "#adding all the dummies for product description to get the total number of times customer has booked Hotel, air or rental in his entire transaction\n",
        "Hotel=PL_training.groupby('INITIAL_EMAIL_KEY').HOTEL.sum().reset_index()\n",
        "Hotel.columns=['INITIAL_EMAIL_KEY','Hotel']\n",
        "Air=PL_training.groupby('INITIAL_EMAIL_KEY').AIR.sum().reset_index()\n",
        "Air.columns=['INITIAL_EMAIL_KEY','Air']\n",
        "Rental=PL_training.groupby('INITIAL_EMAIL_KEY').RENTAL.sum().reset_index()\n",
        "Rental.columns=['INITIAL_EMAIL_KEY','Rental']\n",
        "#adding all the dummies for customer product group to get the total number of times customer has used opaque or transparent in his entire transaction\n",
        "AIR_OPAQUE=PL_training.groupby('INITIAL_EMAIL_KEY').AIR_OPAQUE.sum().reset_index()\n",
        "AIR_OPAQUE.columns=['INITIAL_EMAIL_KEY','AIR_OPAQUE']\n",
        "AIR_RA=PL_training.groupby('INITIAL_EMAIL_KEY').AIR_RA.sum().reset_index()\n",
        "AIR_RA.columns=['INITIAL_EMAIL_KEY','AIR_RA']\n",
        "AIR_RM=PL_training.groupby('INITIAL_EMAIL_KEY').AIR_RM.sum().reset_index()\n",
        "AIR_RM.columns=['INITIAL_EMAIL_KEY','AIR_RM']\n",
        "HOTEL_OPAQUE=PL_training.groupby('INITIAL_EMAIL_KEY').HOTEL_OPAQUE.sum().reset_index()\n",
        "HOTEL_OPAQUE.columns=['INITIAL_EMAIL_KEY','HOTEL_OPAQUE']\n",
        "HOTEL_RA=PL_training.groupby('INITIAL_EMAIL_KEY').HOTEL_RA.sum().reset_index()\n",
        "HOTEL_RA.columns=['INITIAL_EMAIL_KEY','HOTEL_RA']\n",
        "HOTEL_RM=PL_training.groupby('INITIAL_EMAIL_KEY').HOTEL_RM.sum().reset_index()\n",
        "HOTEL_RM.columns=['INITIAL_EMAIL_KEY','HOTEL_RM']\n",
        "HOTEL_SEMI=PL_training.groupby('INITIAL_EMAIL_KEY').HOTEL_SEMI.sum().reset_index()\n",
        "HOTEL_SEMI.columns=['INITIAL_EMAIL_KEY','HOTEL_SEMI']\n",
        "RC_BID=PL_training.groupby('INITIAL_EMAIL_KEY').RC_BID.sum().reset_index()\n",
        "RC_BID.columns=['INITIAL_EMAIL_KEY','RC_BID']\n",
        "RC_BUTITNOW=PL_training.groupby('INITIAL_EMAIL_KEY').RC_BUTITNOW.sum().reset_index()\n",
        "RC_BUTITNOW.columns=['INITIAL_EMAIL_KEY','RC_BUTITNOW']\n",
        "RC_RA=PL_training.groupby('INITIAL_EMAIL_KEY').RC_RA.sum().reset_index()\n",
        "RC_RA.columns=['INITIAL_EMAIL_KEY','RC_BID']\n",
        "AIR_SEMI=PL_training.groupby('INITIAL_EMAIL_KEY').AIR_SEMI.sum().reset_index()\n",
        "AIR_SEMI.columns=['INITIAL_EMAIL_KEY','AIR_SEMI']\n",
        "#captures the most frequently used Marketing channel, device type, and interface by each customer\n",
        "PCLN_CHANNEL_SEARCH=pd.crosstab(PL_training['INITIAL_EMAIL_KEY'], PL_training['PCLN_CHANNEL_SEARCH']).idxmax(1).reset_index()\n",
        "PCLN_CHANNEL_SEARCH.columns=['INITIAL_EMAIL_KEY','PCLN_CHANNEL_SEARCH']\n",
        "CHANNEL_SOURCE=pd.crosstab(PL_training['INITIAL_EMAIL_KEY'], PL_training['CHANNEL_SOURCE']).idxmax(1).reset_index()\n",
        "CHANNEL_SOURCE.columns=['INITIAL_EMAIL_KEY','CHANNEL_SOURCE']\n",
        "DEVICE_TYPE=pd.crosstab(PL_training['INITIAL_EMAIL_KEY'], PL_training['DEVICE_TYPE']).idxmax(1).reset_index()\n",
        "DEVICE_TYPE.columns=['INITIAL_EMAIL_KEY','DEVICE_TYPE']\n",
        "INTERFACE_DESC=pd.crosstab(PL_training['INITIAL_EMAIL_KEY'], PL_training['INTERFACE_DESC']).idxmax(1).reset_index()\n",
        "INTERFACE_DESC.columns=['INITIAL_EMAIL_KEY','INTERFACE_DESC']\n",
        "#Variables such as income level, number of household adults etc. are captured only once during the customers initial transaction. Thus deleting the duplicates keeping only those columns\n",
        "PL2=PL.copy()\n",
        "PL2.drop(['SUBMIT_MINUTE',\n",
        "       'SUBMIT_SECOND', 'OFFER_NUM', 'ACTUAL_DATE','SITE_SERVER_COOKIE', 'PRODUCT_DESC', 'CUST_PRODUCT_GROUP_DESC',\n",
        "       'CUST_PROGRAM_DESC', 'PCLN_CHANNEL_SEARCH', 'CHANNEL_SOURCE',\n",
        "       'DEVICE_TYPE', 'INTERFACE_DESC', 'NEW_GBL_ALL_FLAG','DEST_CITY_NAME',\n",
        "       'DEST_PROVINCE_CODE', 'DEST_ISO_COUNTRY_CODE','TI_FLAG', 'GR_ORDERS', 'NET_ORDERS', 'GR_BOOK_AMT',\n",
        "       'AIR_NUM_TICKETS', 'AIR_STAY_LENGTH', 'AIR_ADV_PURCHASE_DAYS',\n",
        "       'AIR_DOM_INTERNATIONAL_FLAG', 'AIR_ROUND_TRIP_FLAG',\n",
        "       'AIR_DEPARTURE_DATE', 'AIR_RETURN_DATE', 'AIR_CABIN_CLASS',\n",
        "       'AIR_CARRIER_CODE', 'AIR_CARRIER_NAME', 'RC_PICKUP_DATE',\n",
        "       'RC_DROPOFF_DATE', 'RC_AP', 'RC_NUM_RENTAL_DAYS', 'RC_CAR_CLASS',\n",
        "       'RC_SUPPLIER', 'RC_STATUS_CODE', 'RC_REASON_CODE', 'HOTEL_CITY_NAME',\n",
        "       'HOTEL_STATE_CODE',  'HOTEL_COUNTRY_CODE',\n",
        "       'PRICELINE_STAR_RATING', 'HOTEL_AP', 'HOTEL_CHECK_IN_DATE','HOTEL_LOS', 'HOTEL_NUM_RES_ROOMS',\n",
        "       'HOTEL_GDS_NAME', 'PROMO_CODE', 'PROMO_UNIT_AMT', 'PROMO_CAP_AMT',\n",
        "       'PROMO_AMT_CODE', 'SINGLE_USE_FLAG','PROMO_AMT', 'PROMO_ID'], axis=1, inplace=True)\n",
        "PL2.drop_duplicates(subset=\"INITIAL_EMAIL_KEY\", keep='first', inplace=True)\n",
        "#calculating the next visit from recet_visit\n",
        "df2=PL_training2.groupby('INITIAL_EMAIL_KEY').ACTUAL_DATE.min().reset_index()\n",
        "df2.columns=['INITIAL_EMAIL_KEY','Next_visit']\n",
        "#Joining all these dataframes\n",
        "#https://stackoverflow.com/questions/44327999/python-pandas-merge-multiple-dataframes/44338256\n",
        "from functools import reduce\n",
        "data_frames = [recent_vist,first_visit,transaction,Hotel,Air,Rental,AIR_RA, AIR_RM, AIR_SEMI,HOTEL_OPAQUE,HOTEL_RA,HOTEL_RM,HOTEL_SEMI,RC_BID,RC_BUTITNOW,RC_RA,PCLN_CHANNEL_SEARCH,CHANNEL_SOURCE,DEVICE_TYPE,INTERFACE_DESC,TotalOrders,PL2,df2]\n",
        "df = reduce(lambda  left,right: pd.merge(left,right,on=['INITIAL_EMAIL_KEY'],\n",
        "                                            how='outer'), data_frames)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_GBMO1plpDOF",
        "colab_type": "code",
        "outputId": "e0dd872c-b1e8-4d8f-ed81-aabea6ca8a17",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 301
        }
      },
      "source": [
        "df.head(5)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>INITIAL_EMAIL_KEY</th>\n",
              "      <th>recentvisit</th>\n",
              "      <th>first_visit</th>\n",
              "      <th>Average transaction from all the visits</th>\n",
              "      <th>Hotel</th>\n",
              "      <th>Air</th>\n",
              "      <th>Rental</th>\n",
              "      <th>AIR_RA</th>\n",
              "      <th>AIR_RM</th>\n",
              "      <th>AIR_SEMI</th>\n",
              "      <th>HOTEL_OPAQUE</th>\n",
              "      <th>HOTEL_RA</th>\n",
              "      <th>HOTEL_RM</th>\n",
              "      <th>HOTEL_SEMI</th>\n",
              "      <th>RC_BID_x</th>\n",
              "      <th>RC_BUTITNOW</th>\n",
              "      <th>RC_BID_y</th>\n",
              "      <th>PCLN_CHANNEL_SEARCH</th>\n",
              "      <th>CHANNEL_SOURCE</th>\n",
              "      <th>DEVICE_TYPE</th>\n",
              "      <th>INTERFACE_DESC</th>\n",
              "      <th>TotalOrders</th>\n",
              "      <th>CUSTOMER_CITY_NAME</th>\n",
              "      <th>CUSTOMER_ISO_COUNTRY_CODE</th>\n",
              "      <th>CUSTOMER_PROVINCE_CODE</th>\n",
              "      <th>HOH_MARITAL_STATUS_CODE</th>\n",
              "      <th>HOH_YOB_START_DATE</th>\n",
              "      <th>IND_YOB_START_DATE</th>\n",
              "      <th>IND_APPROXIMATE_AGE</th>\n",
              "      <th>HH_NO_OF_ADULTS_DESC</th>\n",
              "      <th>HH_EST_INCOME</th>\n",
              "      <th>IND_GENDER_CODE</th>\n",
              "      <th>HH_EST_NET_WORTH_DESC</th>\n",
              "      <th>EDUCATION_LEVEL_DESC</th>\n",
              "      <th>VACATION_TRAVEL_INTL_FLAG</th>\n",
              "      <th>GREEN_LIVING_FLAG</th>\n",
              "      <th>PET_OWNER_FLAG</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>100001195</td>\n",
              "      <td>2016-09-11</td>\n",
              "      <td>2016-09-11</td>\n",
              "      <td>107.120000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Shop PPC</td>\n",
              "      <td>GOOGLE META SEARCH</td>\n",
              "      <td>DESKTOP</td>\n",
              "      <td>DESKTOP</td>\n",
              "      <td>1.0</td>\n",
              "      <td>HAVERTOWN</td>\n",
              "      <td>US</td>\n",
              "      <td>PA</td>\n",
              "      <td>M</td>\n",
              "      <td>1/1/1962</td>\n",
              "      <td>1/1/1962</td>\n",
              "      <td>54</td>\n",
              "      <td>2 Adults</td>\n",
              "      <td>$30000 to $39999</td>\n",
              "      <td>F</td>\n",
              "      <td>$10000 to $24999</td>\n",
              "      <td>High School Grad</td>\n",
              "      <td>Y</td>\n",
              "      <td>N</td>\n",
              "      <td>Y</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>100002346</td>\n",
              "      <td>2017-08-25</td>\n",
              "      <td>2016-09-12</td>\n",
              "      <td>362.155556</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Direct</td>\n",
              "      <td>DT</td>\n",
              "      <td>DESKTOP</td>\n",
              "      <td>DESKTOP</td>\n",
              "      <td>9.0</td>\n",
              "      <td>HERTFORD</td>\n",
              "      <td>US</td>\n",
              "      <td>NC</td>\n",
              "      <td>M</td>\n",
              "      <td>1/1/1959</td>\n",
              "      <td>1/1/1959</td>\n",
              "      <td>57</td>\n",
              "      <td>3 Adults</td>\n",
              "      <td>$75000 to $99999</td>\n",
              "      <td>M</td>\n",
              "      <td>$100000 to $249999</td>\n",
              "      <td>UNKNOWN</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>100005437</td>\n",
              "      <td>2016-09-12</td>\n",
              "      <td>2016-09-12</td>\n",
              "      <td>256.100000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Web Mktg-Core</td>\n",
              "      <td>GOOGLE_CORE</td>\n",
              "      <td>HANDHELD</td>\n",
              "      <td>MOBILEWEB</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>US</td>\n",
              "      <td>N/</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>100009799</td>\n",
              "      <td>2017-02-28</td>\n",
              "      <td>2016-09-12</td>\n",
              "      <td>64.403333</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Direct</td>\n",
              "      <td>DT</td>\n",
              "      <td>HANDHELD</td>\n",
              "      <td>IPHONENEG</td>\n",
              "      <td>6.0</td>\n",
              "      <td>DAYTON</td>\n",
              "      <td>US</td>\n",
              "      <td>OH</td>\n",
              "      <td>U</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>UKNOWN</td>\n",
              "      <td>UKNOWN</td>\n",
              "      <td>U</td>\n",
              "      <td>UNKNOWN</td>\n",
              "      <td>UNKNOWN</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>100013991</td>\n",
              "      <td>2017-09-01</td>\n",
              "      <td>2017-08-19</td>\n",
              "      <td>439.685000</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Affiliate</td>\n",
              "      <td>KAYAK</td>\n",
              "      <td>DESKTOP</td>\n",
              "      <td>DESKTOP</td>\n",
              "      <td>2.0</td>\n",
              "      <td>ISRAEL</td>\n",
              "      <td>IL</td>\n",
              "      <td>N/</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  INITIAL_EMAIL_KEY recentvisit  ... GREEN_LIVING_FLAG  PET_OWNER_FLAG\n",
              "0         100001195  2016-09-11  ...                 N               Y\n",
              "1         100002346  2017-08-25  ...                 N               N\n",
              "2         100005437  2016-09-12  ...               NaN             NaN\n",
              "3         100009799  2017-02-28  ...                 N               N\n",
              "4         100013991  2017-09-01  ...               NaN             NaN\n",
              "\n",
              "[5 rows x 37 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0KhG0uaJqX3p",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#calculating the target variable\n",
        "#https://stackoverflow.com/questions/22132525/add-column-with-number-of-days-between-dates-in-dataframe-pandas\n",
        "df['Days_diff'] = (df['Next_visit']-df['recentvisit']).dt.days\n",
        "def label_target (row):\n",
        "    if row['Days_diff']<=730:\n",
        "        return 'Yes'\n",
        "    else:\n",
        "        return 'No'\n",
        "df['Retained'] = df.apply (lambda row: label_target(row), axis=1)\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "t0H_IFYlq_N9",
        "colab_type": "code",
        "outputId": "a66a503a-d624-42d0-dfff-58d7b52f91ee",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 211
        }
      },
      "source": [
        "df.head(2)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>INITIAL_EMAIL_KEY</th>\n",
              "      <th>recentvisit</th>\n",
              "      <th>first_visit</th>\n",
              "      <th>Average transaction from all the visits</th>\n",
              "      <th>Hotel</th>\n",
              "      <th>Air</th>\n",
              "      <th>Rental</th>\n",
              "      <th>AIR_RA</th>\n",
              "      <th>AIR_RM</th>\n",
              "      <th>AIR_SEMI</th>\n",
              "      <th>HOTEL_OPAQUE</th>\n",
              "      <th>HOTEL_RA</th>\n",
              "      <th>HOTEL_RM</th>\n",
              "      <th>HOTEL_SEMI</th>\n",
              "      <th>RC_BID_x</th>\n",
              "      <th>RC_BUTITNOW</th>\n",
              "      <th>RC_BID_y</th>\n",
              "      <th>PCLN_CHANNEL_SEARCH</th>\n",
              "      <th>CHANNEL_SOURCE</th>\n",
              "      <th>DEVICE_TYPE</th>\n",
              "      <th>INTERFACE_DESC</th>\n",
              "      <th>TotalOrders</th>\n",
              "      <th>CUSTOMER_CITY_NAME</th>\n",
              "      <th>CUSTOMER_ISO_COUNTRY_CODE</th>\n",
              "      <th>CUSTOMER_PROVINCE_CODE</th>\n",
              "      <th>HOH_MARITAL_STATUS_CODE</th>\n",
              "      <th>HOH_YOB_START_DATE</th>\n",
              "      <th>IND_YOB_START_DATE</th>\n",
              "      <th>IND_APPROXIMATE_AGE</th>\n",
              "      <th>HH_NO_OF_ADULTS_DESC</th>\n",
              "      <th>HH_EST_INCOME</th>\n",
              "      <th>IND_GENDER_CODE</th>\n",
              "      <th>HH_EST_NET_WORTH_DESC</th>\n",
              "      <th>EDUCATION_LEVEL_DESC</th>\n",
              "      <th>VACATION_TRAVEL_INTL_FLAG</th>\n",
              "      <th>GREEN_LIVING_FLAG</th>\n",
              "      <th>PET_OWNER_FLAG</th>\n",
              "      <th>Next_visit</th>\n",
              "      <th>Days_diff</th>\n",
              "      <th>Retained</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>100001195</td>\n",
              "      <td>2016-09-11</td>\n",
              "      <td>2016-09-11</td>\n",
              "      <td>107.120000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Shop PPC</td>\n",
              "      <td>GOOGLE META SEARCH</td>\n",
              "      <td>DESKTOP</td>\n",
              "      <td>DESKTOP</td>\n",
              "      <td>1.0</td>\n",
              "      <td>HAVERTOWN</td>\n",
              "      <td>US</td>\n",
              "      <td>PA</td>\n",
              "      <td>M</td>\n",
              "      <td>1/1/1962</td>\n",
              "      <td>1/1/1962</td>\n",
              "      <td>54</td>\n",
              "      <td>2 Adults</td>\n",
              "      <td>$30000 to $39999</td>\n",
              "      <td>F</td>\n",
              "      <td>$10000 to $24999</td>\n",
              "      <td>High School Grad</td>\n",
              "      <td>Y</td>\n",
              "      <td>N</td>\n",
              "      <td>Y</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>100002346</td>\n",
              "      <td>2017-08-25</td>\n",
              "      <td>2016-09-12</td>\n",
              "      <td>362.155556</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Direct</td>\n",
              "      <td>DT</td>\n",
              "      <td>DESKTOP</td>\n",
              "      <td>DESKTOP</td>\n",
              "      <td>9.0</td>\n",
              "      <td>HERTFORD</td>\n",
              "      <td>US</td>\n",
              "      <td>NC</td>\n",
              "      <td>M</td>\n",
              "      <td>1/1/1959</td>\n",
              "      <td>1/1/1959</td>\n",
              "      <td>57</td>\n",
              "      <td>3 Adults</td>\n",
              "      <td>$75000 to $99999</td>\n",
              "      <td>M</td>\n",
              "      <td>$100000 to $249999</td>\n",
              "      <td>UNKNOWN</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>2017-11-12</td>\n",
              "      <td>79.0</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  INITIAL_EMAIL_KEY recentvisit first_visit  ...  Next_visit  Days_diff  Retained\n",
              "0         100001195  2016-09-11  2016-09-11  ...         NaT        NaN        No\n",
              "1         100002346  2017-08-25  2016-09-12  ...  2017-11-12       79.0       Yes\n",
              "\n",
              "[2 rows x 40 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V31kIbuGrCdy",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#dropping next visit and days_diff because there are a lot of 'NaT' values which may cause trouble later\n",
        "df.drop(['Next_visit','Days_diff'], axis=1, inplace=True)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OH7Jm4Ourpeu",
        "colab_type": "code",
        "outputId": "a3844e78-29e4-4e42-a637-e6154d6ec3ce",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 211
        }
      },
      "source": [
        "df.head(2)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>INITIAL_EMAIL_KEY</th>\n",
              "      <th>recentvisit</th>\n",
              "      <th>first_visit</th>\n",
              "      <th>Average transaction from all the visits</th>\n",
              "      <th>Hotel</th>\n",
              "      <th>Air</th>\n",
              "      <th>Rental</th>\n",
              "      <th>AIR_RA</th>\n",
              "      <th>AIR_RM</th>\n",
              "      <th>AIR_SEMI</th>\n",
              "      <th>HOTEL_OPAQUE</th>\n",
              "      <th>HOTEL_RA</th>\n",
              "      <th>HOTEL_RM</th>\n",
              "      <th>HOTEL_SEMI</th>\n",
              "      <th>RC_BID_x</th>\n",
              "      <th>RC_BUTITNOW</th>\n",
              "      <th>RC_BID_y</th>\n",
              "      <th>PCLN_CHANNEL_SEARCH</th>\n",
              "      <th>CHANNEL_SOURCE</th>\n",
              "      <th>DEVICE_TYPE</th>\n",
              "      <th>INTERFACE_DESC</th>\n",
              "      <th>TotalOrders</th>\n",
              "      <th>CUSTOMER_CITY_NAME</th>\n",
              "      <th>CUSTOMER_ISO_COUNTRY_CODE</th>\n",
              "      <th>CUSTOMER_PROVINCE_CODE</th>\n",
              "      <th>HOH_MARITAL_STATUS_CODE</th>\n",
              "      <th>HOH_YOB_START_DATE</th>\n",
              "      <th>IND_YOB_START_DATE</th>\n",
              "      <th>IND_APPROXIMATE_AGE</th>\n",
              "      <th>HH_NO_OF_ADULTS_DESC</th>\n",
              "      <th>HH_EST_INCOME</th>\n",
              "      <th>IND_GENDER_CODE</th>\n",
              "      <th>HH_EST_NET_WORTH_DESC</th>\n",
              "      <th>EDUCATION_LEVEL_DESC</th>\n",
              "      <th>VACATION_TRAVEL_INTL_FLAG</th>\n",
              "      <th>GREEN_LIVING_FLAG</th>\n",
              "      <th>PET_OWNER_FLAG</th>\n",
              "      <th>Retained</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>100001195</td>\n",
              "      <td>2016-09-11</td>\n",
              "      <td>2016-09-11</td>\n",
              "      <td>107.120000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Shop PPC</td>\n",
              "      <td>GOOGLE META SEARCH</td>\n",
              "      <td>DESKTOP</td>\n",
              "      <td>DESKTOP</td>\n",
              "      <td>1.0</td>\n",
              "      <td>HAVERTOWN</td>\n",
              "      <td>US</td>\n",
              "      <td>PA</td>\n",
              "      <td>M</td>\n",
              "      <td>1/1/1962</td>\n",
              "      <td>1/1/1962</td>\n",
              "      <td>54</td>\n",
              "      <td>2 Adults</td>\n",
              "      <td>$30000 to $39999</td>\n",
              "      <td>F</td>\n",
              "      <td>$10000 to $24999</td>\n",
              "      <td>High School Grad</td>\n",
              "      <td>Y</td>\n",
              "      <td>N</td>\n",
              "      <td>Y</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>100002346</td>\n",
              "      <td>2017-08-25</td>\n",
              "      <td>2016-09-12</td>\n",
              "      <td>362.155556</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Direct</td>\n",
              "      <td>DT</td>\n",
              "      <td>DESKTOP</td>\n",
              "      <td>DESKTOP</td>\n",
              "      <td>9.0</td>\n",
              "      <td>HERTFORD</td>\n",
              "      <td>US</td>\n",
              "      <td>NC</td>\n",
              "      <td>M</td>\n",
              "      <td>1/1/1959</td>\n",
              "      <td>1/1/1959</td>\n",
              "      <td>57</td>\n",
              "      <td>3 Adults</td>\n",
              "      <td>$75000 to $99999</td>\n",
              "      <td>M</td>\n",
              "      <td>$100000 to $249999</td>\n",
              "      <td>UNKNOWN</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  INITIAL_EMAIL_KEY recentvisit  ... PET_OWNER_FLAG  Retained\n",
              "0         100001195  2016-09-11  ...              Y        No\n",
              "1         100002346  2017-08-25  ...              N       Yes\n",
              "\n",
              "[2 rows x 38 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 67
        }
      ]
    }
  ]
}
